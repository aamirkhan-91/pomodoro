{"version":3,"file":"component---src-pages-index-tsx-6325be321ee42bf6b4fd.js","mappings":"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","sources":["webpack://pomodoro-app/./src/hooks/useTimer.ts","webpack://pomodoro-app/./src/hooks/useTheme.ts","webpack://pomodoro-app/./node_modules/clsx/dist/clsx.m.js","webpack://pomodoro-app/./src/components/core/Button/index.tsx","webpack://pomodoro-app/./src/icons/Checkmark.tsx","webpack://pomodoro-app/./src/icons/Cross.tsx","webpack://pomodoro-app/./src/icons/DownArrow.tsx","webpack://pomodoro-app/./src/icons/Gear.tsx","webpack://pomodoro-app/./src/icons/UpArrow.tsx","webpack://pomodoro-app/./src/components/core/NumericInput/index.tsx","webpack://pomodoro-app/./src/components/core/Typography/index.tsx","webpack://pomodoro-app/./src/components/Pomodoro/components/ControlBar/components/Button/index.tsx","webpack://pomodoro-app/./src/components/Pomodoro/components/ControlBar/index.tsx","webpack://pomodoro-app/./src/components/Pomodoro/components/Timer/index.tsx","webpack://pomodoro-app/./src/components/Pomodoro/index.tsx","webpack://pomodoro-app/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://pomodoro-app/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://pomodoro-app/./node_modules/dom-helpers/esm/removeClass.js","webpack://pomodoro-app/./node_modules/react-transition-group/esm/config.js","webpack://pomodoro-app/./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack://pomodoro-app/./node_modules/react-transition-group/esm/Transition.js","webpack://pomodoro-app/./node_modules/react-transition-group/esm/CSSTransition.js","webpack://pomodoro-app/./node_modules/dom-helpers/esm/addClass.js","webpack://pomodoro-app/./node_modules/dom-helpers/esm/hasClass.js","webpack://pomodoro-app/./src/components/SettingsDialog/index.tsx","webpack://pomodoro-app/./src/pages/index.tsx"],"sourcesContent":["import { ControlOption, TimerSettings } from '@src/types/timer';\nimport { TIMER_ACTIONS, TimerContext } from '@state/timer';\nimport { useCallback, useContext } from 'react';\n\nexport const useTimer = (): {\n  selectedOption: ControlOption;\n  isPaused: boolean;\n  isRunning: boolean;\n  timerSettings: TimerSettings;\n  progress: number;\n  restart: () => void;\n  updateProgress: () => void;\n  setTimerSettings: (payload: TimerSettings) => void;\n  setIsPaused: (payload: boolean) => void;\n  setIsRunning: (payload: boolean) => void;\n  setSelectedOption: (payload: ControlOption) => void;\n} => {\n  const { state, dispatch } = useContext(TimerContext);\n\n  const { timerSettings, isPaused, isRunning, selectedOption, progress } =\n    state;\n\n  const setTimerSettings = useCallback(\n    (payload: TimerSettings) => {\n      dispatch({\n        type: TIMER_ACTIONS.SET_TIMER_SETTINGS,\n        payload,\n      });\n    },\n    [dispatch]\n  );\n\n  const setIsPaused = useCallback(\n    (payload: boolean) => {\n      dispatch({\n        type: TIMER_ACTIONS.SET_PAUSED,\n        payload,\n      });\n    },\n    [dispatch]\n  );\n\n  const setIsRunning = useCallback(\n    (payload: boolean) => {\n      dispatch({\n        type: TIMER_ACTIONS.SET_RUNNING,\n        payload,\n      });\n    },\n    [dispatch]\n  );\n\n  const setSelectedOption = useCallback(\n    (payload: ControlOption) => {\n      dispatch({\n        type: TIMER_ACTIONS.SET_OPTION,\n        payload,\n      });\n    },\n    [dispatch]\n  );\n\n  const updateProgress = useCallback(() => {\n    dispatch({\n      type: TIMER_ACTIONS.UPDATE_PROGRES,\n    });\n  }, [dispatch]);\n\n  const restart = useCallback(() => {\n    dispatch({\n      type: TIMER_ACTIONS.RESTART,\n    });\n  }, [dispatch]);\n\n  return {\n    selectedOption,\n    progress,\n    isPaused,\n    isRunning,\n    timerSettings,\n    restart,\n    updateProgress,\n    setTimerSettings,\n    setIsPaused,\n    setIsRunning,\n    setSelectedOption,\n  };\n};\n","import { ColorType, FontType } from '@src/types/theme';\nimport { THEME_ACTIONS, ThemeContext } from '@state/theme';\nimport { useCallback, useContext } from 'react';\n\nexport const useTheme = (): {\n  selectedFont: FontType;\n  selectedColor: ColorType;\n  setFont: (payload: FontType) => void;\n  setColor: (payload: ColorType) => void;\n} => {\n  const { state, dispatch } = useContext(ThemeContext);\n\n  const { selectedFont, selectedColor } = state;\n\n  const setFont = useCallback(\n    (payload: FontType) => {\n      dispatch({\n        type: THEME_ACTIONS.SET_FONT,\n        payload,\n      });\n    },\n    [dispatch]\n  );\n\n  const setColor = useCallback(\n    (payload: ColorType) => {\n      dispatch({\n        type: THEME_ACTIONS.SET_COLOR,\n        payload,\n      });\n    },\n    [dispatch]\n  );\n\n  return {\n    selectedFont,\n    selectedColor,\n    setFont,\n    setColor,\n  };\n};\n","function toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}","import { useTheme } from '@hooks/useTheme';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n\nimport { ButtonProps } from './types';\n\nconst Button: FC<ButtonProps> = ({ children, className, onClick }) => {\n  const { selectedColor } = useTheme();\n\n  let classes = [\n    'rounded-r-full',\n    'rounded-l-full',\n    'py-4',\n    'px-11',\n    'text-white',\n    'transition-all',\n    'duration-200',\n  ];\n\n  switch (selectedColor) {\n    case 'blue':\n      classes = classes.concat('bg-blue');\n      break;\n\n    case 'pink':\n      classes = classes.concat('bg-ping');\n      break;\n\n    case 'red':\n      classes = classes.concat('bg-red');\n      break;\n  }\n\n  return (\n    <button className={clsx(className, classes)} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { FC } from 'react';\n\nconst Checkmark: FC = () => (\n  <svg\n    width=\"15\"\n    height=\"11\"\n    viewBox=\"0 0 15 11\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M1 5.5L4.95263 9.45263L13.4053 1\"\n      stroke=\"#161932\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nexport default Checkmark;\n","import React, { FC } from 'react';\n\nconst Cross: FC = () => (\n  <svg\n    width=\"14\"\n    height=\"14\"\n    viewBox=\"0 0 14 14\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.3639 2.05044L11.9497 0.63623L6.99995 5.58598L2.0502 0.63623L0.635986 2.05044L5.58573 7.00019L0.635986 11.9499L2.0502 13.3642L6.99995 8.4144L11.9497 13.3642L13.3639 11.9499L8.41416 7.00019L13.3639 2.05044Z\"\n      fill=\"#1E213F\"\n    />\n  </svg>\n);\n\nexport default Cross;\n","import React, { FC } from 'react';\n\nconst DownArrow: FC = () => (\n  <svg\n    width=\"14\"\n    height=\"7\"\n    viewBox=\"0 0 14 7\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M1 1L7 5L13 1\"\n      stroke=\"#1E213F\"\n      strokeOpacity=\"0.25\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nexport default DownArrow;\n","import React, { FC, SVGAttributes } from 'react';\n\nconst Gear: FC<{\n  className?: string;\n}> = ({ className = '' }) => (\n  <svg\n    width=\"28\"\n    height=\"28\"\n    viewBox=\"0 0 28 28\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M24.0378 15.365L26.9654 17.682C27.229 17.899 27.3054 18.2771 27.1318 18.578L24.3568 23.429C24.1834 23.73 23.8226 23.849 23.5104 23.73L20.0555 22.323C19.341 22.883 18.557 23.345 17.7106 23.702L17.1903 27.412C17.1348 27.741 16.8504 28 16.5035 28H10.9535C10.6066 28 10.3221 27.741 10.2666 27.412L9.74633 23.702C8.89997 23.345 8.11604 22.8761 7.40145 22.323L3.94654 23.73C3.63435 23.856 3.27364 23.73 3.10018 23.429L0.325132 18.578C0.151671 18.27 0.228028 17.892 0.491634 17.682L3.41927 15.365C3.36379 14.917 3.32216 14.462 3.32216 14C3.32216 13.538 3.36379 13.083 3.41927 12.635L0.491634 10.318C0.228028 10.101 0.151671 9.72302 0.325132 9.42199L3.10025 4.57099C3.27364 4.26996 3.63442 4.15098 3.94661 4.26996L7.40152 5.67697C8.11604 5.11699 8.90003 4.65499 9.74639 4.29799L10.2667 0.588001C10.3222 0.259022 10.6067 0 10.9535 0H16.5036C16.8504 0 17.1348 0.259022 17.1973 0.588001L17.7177 4.29799C18.564 4.65499 19.3479 5.12394 20.0625 5.67697L23.5174 4.26996C23.8296 4.14396 24.1903 4.26996 24.3638 4.57099L27.1389 9.42199C27.3123 9.72997 27.236 10.108 26.9724 10.318L24.0378 12.635C24.0932 13.083 24.1349 13.538 24.1349 14C24.1349 14.462 24.0932 14.917 24.0378 15.365ZM8.8722 14C8.8722 16.709 11.0437 18.9 13.7285 18.9C16.4134 18.9 18.5848 16.7091 18.5848 14.0001C18.5848 11.2911 16.4134 9.10004 13.7285 9.10004C11.0437 9.10004 8.8722 11.291 8.8722 14Z\"\n      fill=\"#D7E0FF\"\n    />\n  </svg>\n);\n\nexport default Gear;\n","import React, { FC } from 'react';\n\nconst UpArrow: FC = () => (\n\n  <svg\n    width=\"14\"\n    height=\"7\"\n    viewBox=\"0 0 14 7\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M1 6L7 2L13 6\"\n      stroke=\"#1E213F\"\n      strokeOpacity=\"0.25\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nexport default UpArrow;\n","import { DownArrowIcon, UpArrowIcon } from '@icons';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n\nimport { NumericInputProps } from './types';\n\nconst NumericInput: FC<NumericInputProps> = ({\n  value,\n  onChange,\n  onIncrement,\n  onDecrement,\n  className = '',\n}) => {\n  return (\n    <div className={clsx('relative', className)}>\n      <input\n        className={clsx(\n          'rounded-l-xl rounded-r-xl py-2 bg-bg-light indent-4 w-full'\n        )}\n        type=\"number\"\n        min=\"0\"\n        value={value}\n        onChange={onChange}\n      />\n      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 flex flex-col space-y-1\">\n        <button\n          className=\"p-1\"\n          onClick={() => (value < 60 ? onIncrement() : null)}\n        >\n          <UpArrowIcon />\n        </button>\n        <button\n          className=\"p-1\"\n          onClick={() => (value > 1 ? onDecrement() : null)}\n        >\n          <DownArrowIcon />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NumericInput;\n","import { useTheme } from '@hooks/useTheme';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n\nimport { TypographyProps } from './types';\n\nconst Typography: FC<TypographyProps> = ({\n  variant,\n  color = 'primary',\n  align,\n  className = '',\n  children,\n}) => {\n  const { selectedFont } = useTheme();\n  let classes: string[] = [className];\n\n  switch (selectedFont) {\n    case 'mono':\n      classes = classes.concat('font-mono');\n      break;\n\n    case 'sans':\n      classes = classes.concat('font-sans');\n      break;\n\n    case 'serif':\n      classes = classes.concat('font-serif');\n      break;\n\n    default:\n      break;\n  }\n\n  switch (color) {\n    case 'primary':\n      classes = classes.concat('text-primary');\n      break;\n\n    case 'dark':\n      classes = classes.concat('text-dark');\n      break;\n\n    case 'white':\n      classes = classes.concat('text-white');\n      break;\n\n    default:\n      break;\n  }\n\n  switch (align) {\n    case 'center':\n      classes = classes.concat('text-center');\n      break;\n\n    case 'right':\n      classes = classes.concat('text-right');\n      break;\n\n    case 'left':\n      classes = classes.concat('text-left');\n      break;\n\n    default:\n      break;\n  }\n\n  if (variant === 'H1') {\n    classes = classes.concat('text-H1-mobile tablet:text-H1');\n    return <h1 className={clsx(classes)}>{children}</h1>;\n  }\n\n  if (variant === 'H2') {\n    classes = classes.concat('text-H2');\n    return <h2 className={clsx(classes)}>{children}</h2>;\n  }\n\n  if (variant === 'H3') {\n    classes = classes.concat('text-H3');\n    return <h3 className={clsx(classes)}>{children}</h3>;\n  }\n\n  if (variant === 'H4') {\n    classes = classes.concat('text-H14');\n    return <h4 className={clsx(classes)}>{children}</h4>;\n  }\n\n  if (variant === 'Body1') {\n    classes = classes.concat('text-Body1');\n    return <p className={clsx(classes)}>{children}</p>;\n  }\n\n  return <p className={clsx(classes, 'text-Body2')}>{children}</p>;\n};\n\nexport default Typography;\n","import { Typography } from '@core-components';\nimport { useTheme } from '@hooks/useTheme';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n\nimport { ButtonProps } from './types';\n\nconst Button: FC<ButtonProps> = ({\n  title,\n  controlOption,\n  isActive = false,\n  onClick,\n}) => {\n  const { selectedColor } = useTheme();\n  let bgColor;\n\n  switch (selectedColor) {\n    case 'blue':\n      bgColor = 'bg-blue';\n      break;\n\n    case 'pink':\n      bgColor = 'bg-ping';\n      break;\n\n    case 'red':\n      bgColor = 'bg-red';\n      break;\n  }\n\n  return (\n    <button\n      className={clsx(\n        'w-[110px] tablet:w-[120px] py-4 px-5 rounded-l-full rounded-r-full flex-1 transition-colors duration-150 group',\n        {\n          [bgColor]: isActive,\n        }\n      )}\n      onClick={() => onClick(controlOption)}\n    >\n      <Typography\n        align=\"center\"\n        color={isActive ? 'dark' : 'primary'}\n        className={clsx(\n          'group-hover:text-opacity-100 transition-colors duration-200',\n          {\n            'text-opacity-40': !isActive,\n          }\n        )}\n        variant=\"Body2\"\n      >\n        {title}\n      </Typography>\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { FC } from 'react';\n\nimport { Button } from './components';\nimport { ControlBarProps } from './types';\n\nconst ControlBar: FC<ControlBarProps> = ({\n  selectedOption,\n  onOptionChanged,\n}) => {\n  return (\n    <div className=\"flex bg-bg-dark rounded-r-full rounded-l-full p-2 overflow-hidden\">\n      <Button\n        isActive={selectedOption === 'pomodoro'}\n        controlOption=\"pomodoro\"\n        title=\"pomodoro\"\n        onClick={(option) => onOptionChanged(option)}\n      />\n      <Button\n        isActive={selectedOption === 'short_break'}\n        controlOption=\"short_break\"\n        title=\"short break\"\n        onClick={(option) => onOptionChanged(option)}\n      />\n      <Button\n        isActive={selectedOption === 'long_break'}\n        controlOption=\"long_break\"\n        title=\"long break\"\n        onClick={(option) => onOptionChanged(option)}\n      />\n    </div>\n  );\n};\n\nexport default ControlBar;\n","import { Typography } from '@core-components';\nimport { useTheme } from '@hooks/useTheme';\nimport { useTimer } from '@src/hooks/useTimer';\n// import { RefreshIcon } from '@icons';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n\n// import { CSSTransition } from 'react-transition-group';\nimport { TimerProps } from './types';\n\nconst Timer: FC<TimerProps> = ({\n  duration,\n  onStart,\n  onPause,\n  onRestart,\n  onResume,\n  // onReset,\n}) => {\n  const { progress, isRunning, isPaused } = useTimer();\n  const { selectedColor } = useTheme();\n\n  const onClick = () => {\n    if (isRunning) {\n      if (duration > progress) {\n        onPause();\n      } else {\n        onRestart();\n      }\n    } else {\n      if (isPaused) {\n        onResume();\n      } else {\n        onStart();\n      }\n    }\n  };\n\n  let buttonText;\n\n  if (isRunning) {\n    if (duration > progress) {\n      buttonText = 'PAUSE';\n    } else {\n      buttonText = 'RESTART';\n    }\n  } else {\n    if (isPaused) {\n      buttonText = 'RESUME';\n    } else {\n      buttonText = 'START';\n    }\n  }\n\n  let textColor;\n  let hoverColor;\n\n  switch (selectedColor) {\n    case 'blue':\n      textColor = 'text-blue';\n      hoverColor = 'hover:text-blue';\n      break;\n\n    case 'pink':\n      textColor = 'text-pink';\n      hoverColor = 'hover:text-pink';\n      break;\n\n    case 'red':\n      textColor = 'text-red';\n      hoverColor = 'hover:text-red';\n      break;\n  }\n\n  const button = (\n    <button onClick={onClick} className=\"w-full\">\n      <Typography\n        align=\"center\"\n        className={`-mr-3 transition-color duration-200 ${hoverColor}`}\n        variant=\"H3\"\n      >\n        {buttonText}\n      </Typography>\n    </button>\n  );\n\n  const getTimeInMinutes = (seconds: number): string => {\n    const remainingSeconds = seconds % 60;\n    const remainingMinutes = Math.floor(seconds / 60);\n\n    return `${remainingMinutes.toString().padStart(2, '0')}:${remainingSeconds\n      .toString()\n      .padStart(2, '0')}`;\n  };\n\n  return (\n    <div\n      className={`clock-container w-[300px] h-[300px] tablet:w-[410px] tablet:h-[410px]  rounded-full my-auto relative color ${textColor}`}\n    >\n      <div className=\"absolute w-9/10 h-9/10 bg-bg-dark rounded-full top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n        <svg\n          className=\"w-full h-full transition-colors duration-150\"\n          viewBox=\"0 0 100 100\"\n        >\n          <circle\n            style={{\n              strokeDasharray: 2 * 3.142 * 47,\n              strokeDashoffset: (progress / duration) * 2 * 3.142 * 47,\n            }}\n            cx=\"50\"\n            cy=\"50\"\n            r=\"47\"\n            fill=\"none\"\n            strokeWidth=\"3\"\n            strokeLinecap=\"round\"\n            className=\"stroke-current transform origin-center -rotate-90 transition-stroke\"\n          />\n        </svg>\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n          <Typography\n            className={clsx({\n              'animate-blink': isPaused,\n            })}\n            variant=\"H1\"\n          >\n            {getTimeInMinutes(duration - progress)}\n          </Typography>\n          <div className=\"absolute flex flex-col items-center top-full left-1/2 transform -translate-x-1/2\">\n            {button}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import { useTimer } from '@hooks/useTimer';\nimport { ControlOption } from '@src/types/timer';\nimport React, { FC, useEffect, useRef } from 'react';\n\nimport { ControlBar, Timer } from './components';\n\nconst Pomodoro: FC = () => {\n  const {\n    selectedOption,\n    timerSettings,\n    progress,\n    isRunning,\n    isPaused,\n    updateProgress,\n    setIsPaused,\n    setIsRunning,\n    setSelectedOption,\n    restart,\n  } = useTimer();\n\n  const timeout = useRef<NodeJS.Timeout | null>(null);\n\n  const duration = timerSettings[selectedOption] * 60;\n\n  const onOptionChanged = (option: ControlOption) => {\n    setSelectedOption(option);\n  };\n\n  useEffect(() => {\n    setIsRunning(false);\n    setIsPaused(false);\n  }, [setIsPaused, setIsRunning, timerSettings]);\n\n  useEffect(() => {\n    if (isRunning) {\n      timeout.current = setTimeout(() => {\n        if (progress < duration) {\n          updateProgress();\n        }\n      }, 1000);\n\n      if (progress === duration) {\n        clearTimeout(timeout.current as NodeJS.Timeout);\n      }\n\n      return () => clearTimeout(timeout.current as NodeJS.Timeout);\n    }\n  }, [duration, isRunning, progress, updateProgress]);\n\n  const onStart = () => {\n    setIsRunning(true);\n  };\n\n  const onPause = () => {\n    setIsPaused(true);\n    setIsRunning(false);\n    clearTimeout(timeout.current as NodeJS.Timeout);\n  };\n\n  const onRestart = () => {\n    restart();\n  };\n\n  const onResume = () => {\n    setIsPaused(false);\n    setIsRunning(true);\n  };\n\n  // const onReset = () => {\n  //   setIsPaused(false);\n  //   setIsRunning(false);\n  //   setRemainingTime(timerSettings[selectedOption] * 60);\n  // };\n\n  return (\n    <div className=\"flex flex-col flex-1 justify-between items-center\">\n      <ControlBar\n        selectedOption={selectedOption}\n        onOptionChanged={onOptionChanged}\n      />\n      <Timer\n        duration={duration}\n        onStart={onStart}\n        onPause={onPause}\n        onRestart={onRestart}\n        onResume={onResume}\n        // onReset={onReset}\n      />\n    </div>\n  );\n};\n\nexport default Pomodoro;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\n\n// Name the function so it is clearer in the documentation\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Button, NumericInput, Typography } from '@core-components';\nimport { useTheme } from '@hooks/useTheme';\nimport { useTimer } from '@hooks/useTimer';\nimport { CheckmarkIcon, CrossIcon, GearIcon } from '@icons';\nimport { ColorType, FontType } from '@src/types/theme';\nimport { TimerSettings } from '@src/types/timer';\nimport clsx from 'clsx';\nimport React, { FC, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nconst SettingsDialog: FC = () => {\n  const isBrowser = typeof window !== 'undefined';\n\n  const [isOpen, setIsOpen] = useState(false);\n  const container = isBrowser && document.querySelector('#modal-root');\n\n  const [locallySelectedFont, setLocallySelectedFont] =\n    useState<FontType | null>(null);\n  const [locallySelectedColor, setLocallySelectedColor] =\n    useState<ColorType | null>(null);\n  const [localTimerSettings, setLocalTimerSettings] =\n    useState<TimerSettings | null>(null);\n\n  const { selectedFont, selectedColor, setFont, setColor } = useTheme();\n  const { timerSettings, setTimerSettings } = useTimer();\n\n  useEffect(() => {\n    if (selectedFont) {\n      setLocallySelectedFont(selectedFont);\n    }\n  }, [selectedFont, isOpen]);\n\n  useEffect(() => {\n    if (selectedColor) {\n      setLocallySelectedColor(selectedColor);\n    }\n  }, [selectedColor, isOpen]);\n\n  useEffect(() => {\n    if (timerSettings) {\n      setLocalTimerSettings(timerSettings);\n    }\n  }, [timerSettings, isOpen]);\n\n  const onClickApplyChanges = () => {\n    if (\n      localTimerSettings !== null &&\n      locallySelectedColor !== null &&\n      locallySelectedFont !== null &&\n      setTimerSettings !== null\n    ) {\n      setFont(locallySelectedFont);\n      setColor(locallySelectedColor);\n      setTimerSettings(localTimerSettings);\n    }\n\n    setIsOpen(false);\n  };\n\n  let dialog: React.ReactPortal | null = null;\n\n  if (container) {\n    dialog = createPortal(\n      <>\n        <CSSTransition\n          unmountOnExit\n          timeout={300}\n          in={isOpen}\n          classNames=\"backdrop\"\n        >\n          <div\n            role=\"presentation\"\n            className=\"absolute h-screen w-full top-0 left-0 z-10 flex justify-center items-center\"\n            onClick={() => setIsOpen(false)}\n            onKeyDown={(e: React.KeyboardEvent<HTMLDivElement>) => {\n              if (e.key === '27') {\n                setIsOpen(false);\n              }\n            }}\n          />\n        </CSSTransition>\n        <CSSTransition\n          timeout={300}\n          in={isOpen}\n          unmountOnExit\n          classNames=\"dialog\"\n        >\n          {localTimerSettings && locallySelectedColor && locallySelectedFont ? (\n            <div className=\"max-w-[327px] tablet:max-w-[540px] absolute w-full bg-white rounded-lg z-20\">\n              <div className=\"p-6 flex justify-between items-center border-b border-divider\">\n                <Typography variant=\"H2\" color=\"dark\">\n                  Settings\n                </Typography>\n                <button\n                  className=\"rounded-full bg-bg-light bg-opacity-0 hover:bg-opacity-100 transition-colors duration-200 w-8 h-8 flex justify-center items-center\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  <CrossIcon />\n                </button>\n              </div>\n              <div className=\"px-6\">\n                <div className=\"pb-6 pt-6 border-b border-divider\">\n                  <Typography\n                    variant=\"H4\"\n                    className=\"text-center tablet:text-left\"\n                    color=\"dark\"\n                  >\n                    TIME (MINUTES)\n                  </Typography>\n                  <div className=\"flex flex-col space-y-5 mt-4 tablet:flex-row tablet:space-y-0 tablet:space-x-4\">\n                    <div className=\"flex tablet:flex-col tablet:space-y-2 justify-between items-center tablet:items-start\">\n                      <Typography variant=\"Body2\">pomodoro</Typography>\n                      <NumericInput\n                        className=\"w-1/2 tablet:w-full\"\n                        value={localTimerSettings.pomodoro}\n                        onChange={(e) =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            pomodoro: Number.parseInt(e.target.value, 10),\n                          })\n                        }\n                        onIncrement={() =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            pomodoro: localTimerSettings.pomodoro + 1,\n                          })\n                        }\n                        onDecrement={() =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            pomodoro: localTimerSettings.pomodoro - 1,\n                          })\n                        }\n                      />\n                    </div>\n                    <div className=\"flex tablet:flex-col tablet:space-y-2 justify-between items-center tablet:items-start\">\n                      <Typography variant=\"Body2\">short break</Typography>\n                      <NumericInput\n                        className=\"w-1/2 tablet:w-full\"\n                        value={localTimerSettings.short_break}\n                        onChange={(e) =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            short_break: Number.parseInt(e.target.value, 10),\n                          })\n                        }\n                        onIncrement={() =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            short_break: localTimerSettings.short_break + 1,\n                          })\n                        }\n                        onDecrement={() =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            short_break: localTimerSettings.short_break - 1,\n                          })\n                        }\n                      />\n                    </div>\n                    <div className=\"flex tablet:flex-col tablet:space-y-2 justify-between items-center tablet:items-start\">\n                      <Typography variant=\"Body2\">long break</Typography>\n                      <NumericInput\n                        className=\"w-1/2 tablet:w-full\"\n                        value={localTimerSettings.long_break}\n                        onChange={(e) =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            long_break: Number.parseInt(e.target.value, 10),\n                          })\n                        }\n                        onIncrement={() =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            long_break: localTimerSettings.long_break + 1,\n                          })\n                        }\n                        onDecrement={() =>\n                          setLocalTimerSettings({\n                            ...localTimerSettings,\n                            long_break: localTimerSettings.long_break - 1,\n                          })\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"pb-6 pt-6 border-b border-divider tablet:flex tablet:items-center tablet:justify-between\">\n                  <Typography variant=\"H4\" align=\"center\" color=\"dark\">\n                    FONT\n                  </Typography>\n                  <div className=\"mt-4 tablet:mt-0 flex space-x-1 justify-center\">\n                    <button\n                      className={clsx(\n                        'rounded-full flex justify-center items-center font-sano h-12 w-12 border-4 border-white hover:shadow-circle-option transition-shadow duration-300',\n                        {\n                          'bg-bg-dark text-white':\n                            locallySelectedFont === 'sans',\n                          'bg-bg-light text-dark':\n                            locallySelectedFont !== 'sans',\n                        }\n                      )}\n                      onClick={() => setLocallySelectedFont('sans')}\n                    >\n                      Aa\n                    </button>\n                    <button\n                      className={clsx(\n                        'rounded-full flex justify-center items-center font-serio h-12 w-12 border-4 border-white hover:shadow-circle-option transition-shadow duration-300',\n                        {\n                          'bg-bg-dark text-white':\n                            locallySelectedFont === 'serif',\n                          'bg-bg-light text-dark':\n                            locallySelectedFont !== 'serif',\n                        }\n                      )}\n                      onClick={() => setLocallySelectedFont('serif')}\n                    >\n                      Aa\n                    </button>\n                    <button\n                      className={clsx(\n                        'rounded-full flex justify-center items-center font-mono h-12 w-12 border-4 border-white hover:shadow-circle-option transition-shadow duration-300',\n                        {\n                          'bg-bg-dark text-white':\n                            locallySelectedFont === 'mono',\n                          'bg-bg-light text-dark':\n                            locallySelectedFont !== 'mono',\n                        }\n                      )}\n                      onClick={() => setLocallySelectedFont('mono')}\n                    >\n                      Aa\n                    </button>\n                  </div>\n                </div>\n                <div className=\"pb-16 pt-6  tablet:flex tablet:items-center tablet:justify-between\">\n                  <Typography variant=\"H4\" align=\"center\" color=\"dark\">\n                    COLOR\n                  </Typography>\n                  <div className=\"mt-4 tablet:mt-0 flex space-x-1 justify-center\">\n                    <button\n                      className=\"rounded-full flex justify-center items-center h-12 w-12 border-4 border-white hover:shadow-circle-option transition-shadow duration-300 bg-red p-2\"\n                      onClick={() => setLocallySelectedColor('red')}\n                    >\n                      {locallySelectedColor === 'red' ? (\n                        <CheckmarkIcon />\n                      ) : null}\n                    </button>\n                    <button\n                      className=\"rounded-full flex justify-center items-center h-12 w-12 border-4 border-white hover:shadow-circle-option transition-shadow duration-300 bg-blue p-2\"\n                      onClick={() => setLocallySelectedColor('blue')}\n                    >\n                      {locallySelectedColor === 'blue' ? (\n                        <CheckmarkIcon />\n                      ) : null}\n                    </button>\n                    <button\n                      className=\"rounded-full flex justify-center items-center h-12 w-12 border-4 border-white hover:shadow-circle-option transition-shadow duration-300 bg-pink p-2\"\n                      onClick={() => setLocallySelectedColor('pink')}\n                    >\n                      {locallySelectedColor === 'pink' ? (\n                        <CheckmarkIcon />\n                      ) : null}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <Button\n                className=\"absolute top-full left-1/2 transform -translate-y-1/2 -translate-x-1/2\"\n                onClick={onClickApplyChanges}\n              >\n                Apply\n              </Button>\n            </div>\n          ) : null}\n        </CSSTransition>\n      </>,\n      container\n    );\n  }\n\n  return (\n    <>\n      {dialog}\n      <div className=\"flex justify-center\">\n        <button className=\"group\" onClick={() => setIsOpen(true)}>\n          <GearIcon className=\"transition-opacity duration-200 opacity-50 group-hover:opacity-100\" />\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsDialog;\n","import { Pomodoro, SettingsDialog } from '@components';\nimport { Typography } from '@core-components';\nimport React, { FC } from 'react';\n\nconst IndexPage: FC = () => {\n  return (\n    <>\n      <div id=\"modal-root\" />\n      <div className=\"bg-bg h-full px-6 py-8 flex flex-col justify-between\">\n        <title>Pomodoro</title>\n        <Typography variant=\"H2\" align=\"center\" className=\"mb-11 tablet:mb-14\">\n          pomodoro\n        </Typography>\n        <Pomodoro />\n        <SettingsDialog />\n      </div>\n    </>\n  );\n};\n\nexport default IndexPage;\n"],"names":["useTimer","useContext","TimerContext","state","dispatch","timerSettings","isPaused","isRunning","selectedOption","progress","setTimerSettings","useCallback","payload","type","TIMER_ACTIONS","setIsPaused","setIsRunning","setSelectedOption","updateProgress","restart","useTheme","ThemeContext","selectedFont","selectedColor","setFont","THEME_ACTIONS","setColor","toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","children","className","onClick","classes","concat","clsx","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","fillRule","clipRule","strokeOpacity","value","onChange","onIncrement","onDecrement","min","variant","color","align","bgColor","title","controlOption","isActive","onOptionChanged","option","buttonText","textColor","hoverColor","duration","onStart","onPause","onRestart","onResume","seconds","remainingSeconds","button","style","strokeDasharray","strokeDashoffset","cx","cy","r","strokeLinecap","Math","floor","toString","padStart","timeout","useRef","useEffect","current","setTimeout","clearTimeout","_extends","Object","assign","target","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","replaceClassName","origClass","classToRemove","replace","RegExp","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","render","_this$props","childProps","TransitionGroupContext","Provider","noop","contextType","defaultProps","removeClass","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","_key","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","contains","hasClass","_addClass","_this$appliedClasses$","base","done","isBrowser","window","useState","isOpen","setIsOpen","container","document","querySelector","locallySelectedFont","setLocallySelectedFont","locallySelectedColor","setLocallySelectedColor","localTimerSettings","setLocalTimerSettings","dialog","createPortal","role","onKeyDown","e","pomodoro","Number","parseInt","short_break","long_break","id"],"sourceRoot":""}